@model IEnumerable<EventEase.Models.Venue>

@{
    ViewData["Title"] = "Venues";
}

<h1 class="text-center my-4">Venues</h1>

<div class="d-flex justify-content-end mb-4">
    <a href="@Url.Action("Create")" class="btn btn-primary">Create New Venue</a>
</div>

<table class="table table-striped table-hover">
    <thead class="thead-dark">
        <tr>
            <th scope="col">Venue Name</th>
            <th scope="col">Location</th>
            <th scope="col">Capacity</th>
            <th scope="col">Actions</th>
        </tr>
    </thead>
    <tbody>
       @foreach (var venue in Model)
{
    <tr>
        <td>@venue.VenueName</td>
        <td>@venue.Location</td>
        <td>@venue.Capacity</td>
        <td>
            <a href="@Url.Action("Edit", new { id = venue.VenueId })" class="btn btn-warning btn-sm">Edit</a>

            @if (((HashSet<int>)ViewBag.BookedVenueIds).Contains(venue.VenueId))
            {
                <a href="#" class="btn btn-danger linked-delete" data-message="This event is linked to a booking and cannot be deleted.">Delete</a>
                <div class="error-message" style="display:none; color: red;">This event is linked to a booking and cannot be deleted.</div>
            }
            else
            {
                <a asp-action="Delete" asp-route-id="@venue.VenueId" class="btn btn-danger not-linked-delete">Delete</a>
            }

        </td>
    </tr>
}

    </tbody>
</table>
@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Select all linked-delete buttons
            const linkedDeleteButtons = document.querySelectorAll(".linked-delete");

            linkedDeleteButtons.forEach(button => {
                button.addEventListener("click", function (e) {
                    e.preventDefault(); // Prevent the default action (which would be a form submission)

                    // Find the closest error message in the row and display it
                    const errorMessage = button.closest('td').querySelector('.error-message');
                    if (errorMessage) {
                        errorMessage.style.display = 'block'; // Show the error message
                    }
                });
            });

            // Optionally, hide the error message if the user clicks anywhere else (on a non-linked delete button)
            document.querySelectorAll(".not-linked-delete").forEach(button => {
                button.addEventListener("click", function () {
                    // Hide all error messages when other delete buttons are clicked
                    document.querySelectorAll('.error-message').forEach(error => {
                        error.style.display = 'none';
                    });
                });
            });
        });
    </script>
}
